package Network;

import Misc.Constants;
import Misc.UserPreferences;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.TextView;
import dme.forecastiolib.FIODaily;
import dme.forecastiolib.ForecastIO;

public class GetWeatherStats extends AsyncTask<Void, Void, ForecastIO> {

	TextView temperatureTV;
	TextView weatherStateTV;
	TextView cityAndTimeTV;
	TextView lastUpdateTV;
	UserPreferences userPref;

	public GetWeatherStats(TextView temperatureTV, TextView weatherStateTV,
			TextView cityAndTimeTV, TextView lastUpdateTV) {
		this.temperatureTV = temperatureTV;
		this.weatherStateTV = weatherStateTV;
		this.cityAndTimeTV = cityAndTimeTV;
		this.lastUpdateTV = lastUpdateTV;
		userPref = UserPreferences.getUserPreferences();
	}

	@Override
	protected ForecastIO doInBackground(Void... params) {

		ForecastIO fio = null;
		try {
			fio = new ForecastIO(Constants.APIKEY);
			fio.setUnits(ForecastIO.UNITS_UK);
			fio.setExcludeURL("hourly,minutely");
			fio.getForecast(userPref.getLatitude() + "",
					userPref.getLongtitude() + "");
		} catch (Exception e) {
			Log.v(Constants.MAIN_LOG_Key, "Network Error");
		}

		return fio;
	}

	@Override
	protected void onPostExecute(ForecastIO fio) {
		super.onPostExecute(fio);

		if (fio == null)
			return;

	    FIODaily daily = new FIODaily(fio);

	    for(int i = 0; i<daily.days(); i++){
	        String [] h = daily.getDay(i).getFieldsArray();
	        System.out.println("Day #"+(i+1));
	        for(int j=0; j<h.length; j++){
	            Log.v(Constants.MAIN_LOG_Key,(h[j]+": "+daily.getDay(i).getByKey(h[j])));
	        }
	        System.out.println("\n");
	    }
		
		
//		FIOCurrently currently = new FIOCurrently(fio);
//		temperatureTV.setText(currently.get().temperature()
//				+ Constants.celciusExtension);
//		weatherStateTV.setText(currently.get().summary());
//		cityAndTimeTV.setText(userPref.getCity());
//		lastUpdateTV.setText(currently.get().time());
	}

}
